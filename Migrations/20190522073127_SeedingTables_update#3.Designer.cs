// <auto-generated />
using System;
using FreeWheelMovieAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FreeWheelMovieAPI.Migrations
{
    [DbContext(typeof(MovieDBContext))]
    [Migration("20190522073127_SeedingTables_update#3")]
    partial class SeedingTables_update3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FreeWheelMovieAPI.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Animation"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Crime"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Documentary"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Family"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 11,
                            Name = "History"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Musical"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Romance"
                        });
                });

            modelBuilder.Entity("FreeWheelMovieAPI.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AverageRating")
                        .HasColumnType("decimal(2, 1)");

                    b.Property<string>("CountryReleased");

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Language");

                    b.Property<byte>("NumberAvailable");

                    b.Property<byte>("NumberInStock");

                    b.Property<int>("ReleaseYear");

                    b.Property<int>("Runningtime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AverageRating = 8.9m,
                            CountryReleased = "USA",
                            DateAdded = new DateTime(2019, 5, 22, 2, 31, 27, 100, DateTimeKind.Local).AddTicks(4071),
                            DateModified = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7184),
                            Language = "English",
                            NumberAvailable = (byte)10,
                            NumberInStock = (byte)1,
                            ReleaseYear = 2019,
                            Runningtime = 181,
                            Title = "Avengers: EndGame"
                        },
                        new
                        {
                            Id = 2,
                            AverageRating = 7.1m,
                            CountryReleased = "USA",
                            DateAdded = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7779),
                            DateModified = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7790),
                            Language = "English",
                            NumberAvailable = (byte)10,
                            NumberInStock = (byte)7,
                            ReleaseYear = 2019,
                            Runningtime = 123,
                            Title = "Captain Marvel"
                        },
                        new
                        {
                            Id = 3,
                            AverageRating = 7.5m,
                            CountryReleased = "USA",
                            DateAdded = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7797),
                            DateModified = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7801),
                            Language = "English",
                            NumberAvailable = (byte)10,
                            NumberInStock = (byte)6,
                            ReleaseYear = 2019,
                            Runningtime = 132,
                            Title = "Shazam"
                        },
                        new
                        {
                            Id = 4,
                            AverageRating = 5.1m,
                            CountryReleased = "USA",
                            DateAdded = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7804),
                            DateModified = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7808),
                            Language = "English",
                            NumberAvailable = (byte)10,
                            NumberInStock = (byte)8,
                            ReleaseYear = 2019,
                            Runningtime = 89,
                            Title = "Toy Story 4"
                        },
                        new
                        {
                            Id = 5,
                            AverageRating = 7.1m,
                            CountryReleased = "United Kingdom",
                            DateAdded = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7808),
                            DateModified = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7812),
                            Language = "English",
                            NumberAvailable = (byte)10,
                            NumberInStock = (byte)4,
                            ReleaseYear = 2019,
                            Runningtime = 131,
                            Title = "Godzilla: King of the Monsters"
                        },
                        new
                        {
                            Id = 6,
                            AverageRating = 4.1m,
                            CountryReleased = "USA",
                            DateAdded = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7815),
                            DateModified = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7819),
                            Language = "English",
                            NumberAvailable = (byte)10,
                            NumberInStock = (byte)9,
                            ReleaseYear = 2018,
                            Runningtime = 123,
                            Title = "Dark Phoenix"
                        },
                        new
                        {
                            Id = 7,
                            AverageRating = 8.1m,
                            CountryReleased = "Germany",
                            DateAdded = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7819),
                            DateModified = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7823),
                            Language = "English",
                            NumberAvailable = (byte)10,
                            NumberInStock = (byte)2,
                            ReleaseYear = 2018,
                            Runningtime = 183,
                            Title = "Spider-Man: Far from Home"
                        },
                        new
                        {
                            Id = 8,
                            AverageRating = 3.1m,
                            CountryReleased = "USA",
                            DateAdded = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7826),
                            DateModified = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7826),
                            Language = "English",
                            NumberAvailable = (byte)10,
                            NumberInStock = (byte)9,
                            ReleaseYear = 2018,
                            Runningtime = 147,
                            Title = "The New Mutants"
                        },
                        new
                        {
                            Id = 9,
                            AverageRating = 8.7m,
                            CountryReleased = "USA",
                            DateAdded = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7830),
                            DateModified = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7833),
                            Language = "English",
                            NumberAvailable = (byte)10,
                            NumberInStock = (byte)3,
                            ReleaseYear = 2018,
                            Runningtime = 198,
                            Title = "Star Wars"
                        },
                        new
                        {
                            Id = 10,
                            AverageRating = 4.1m,
                            CountryReleased = "USA",
                            DateAdded = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7837),
                            DateModified = new DateTime(2019, 5, 22, 2, 31, 27, 102, DateTimeKind.Local).AddTicks(7837),
                            Language = "English",
                            NumberAvailable = (byte)10,
                            NumberInStock = (byte)9,
                            ReleaseYear = 2018,
                            Runningtime = 145,
                            Title = "Top Gun: Maverick"
                        });
                });

            modelBuilder.Entity("FreeWheelMovieAPI.Models.MovieGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GenreId");

                    b.Property<int>("MovieId");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieGenres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 2,
                            GenreId = 2,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 3,
                            GenreId = 1,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 4,
                            GenreId = 2,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 5,
                            GenreId = 1,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 6,
                            GenreId = 2,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 7,
                            GenreId = 5,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 8,
                            GenreId = 2,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 9,
                            GenreId = 3,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 10,
                            GenreId = 5,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 11,
                            GenreId = 1,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 12,
                            GenreId = 2,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 13,
                            GenreId = 10,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 14,
                            GenreId = 1,
                            MovieId = 6
                        },
                        new
                        {
                            Id = 15,
                            GenreId = 2,
                            MovieId = 6
                        },
                        new
                        {
                            Id = 16,
                            GenreId = 15,
                            MovieId = 6
                        },
                        new
                        {
                            Id = 17,
                            GenreId = 13,
                            MovieId = 7
                        },
                        new
                        {
                            Id = 18,
                            GenreId = 14,
                            MovieId = 8
                        },
                        new
                        {
                            Id = 19,
                            GenreId = 15,
                            MovieId = 9
                        },
                        new
                        {
                            Id = 20,
                            GenreId = 11,
                            MovieId = 10
                        },
                        new
                        {
                            Id = 21,
                            GenreId = 12,
                            MovieId = 10
                        });
                });

            modelBuilder.Entity("FreeWheelMovieAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthdate");

                    b.Property<bool>("IsSubscribedToNewsletter");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1979, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSubscribedToNewsletter = true,
                            Name = "Birendra Mohanraj"
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(1973, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSubscribedToNewsletter = false,
                            Name = "John Smith"
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateTime(1970, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSubscribedToNewsletter = true,
                            Name = "Adam Johnson"
                        },
                        new
                        {
                            Id = 4,
                            Birthdate = new DateTime(1987, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSubscribedToNewsletter = false,
                            Name = "Emilio Venegas"
                        },
                        new
                        {
                            Id = 5,
                            Birthdate = new DateTime(1965, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSubscribedToNewsletter = true,
                            Name = "Lee Yelverton"
                        },
                        new
                        {
                            Id = 6,
                            Birthdate = new DateTime(1983, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSubscribedToNewsletter = false,
                            Name = "Alan Appleton"
                        },
                        new
                        {
                            Id = 7,
                            Birthdate = new DateTime(1976, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSubscribedToNewsletter = true,
                            Name = "Michael Chang"
                        },
                        new
                        {
                            Id = 8,
                            Birthdate = new DateTime(1963, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSubscribedToNewsletter = false,
                            Name = "Anthony Paul"
                        },
                        new
                        {
                            Id = 9,
                            Birthdate = new DateTime(1978, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSubscribedToNewsletter = true,
                            Name = "John Pickering"
                        },
                        new
                        {
                            Id = 10,
                            Birthdate = new DateTime(1993, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSubscribedToNewsletter = false,
                            Name = "Scott Tiger"
                        });
                });

            modelBuilder.Entity("FreeWheelMovieAPI.Models.UserMovieRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MovieId");

                    b.Property<int>("RatingStars");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("UserMovieRatings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = 1,
                            RatingStars = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            MovieId = 2,
                            RatingStars = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            MovieId = 1,
                            RatingStars = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            MovieId = 1,
                            RatingStars = 5,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            MovieId = 1,
                            RatingStars = 4,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            MovieId = 2,
                            RatingStars = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            MovieId = 3,
                            RatingStars = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            MovieId = 4,
                            RatingStars = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            MovieId = 1,
                            RatingStars = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 10,
                            MovieId = 5,
                            RatingStars = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 11,
                            MovieId = 6,
                            RatingStars = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 12,
                            MovieId = 10,
                            RatingStars = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 13,
                            MovieId = 10,
                            RatingStars = 2,
                            UserId = 10
                        },
                        new
                        {
                            Id = 14,
                            MovieId = 9,
                            RatingStars = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 15,
                            MovieId = 8,
                            RatingStars = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 16,
                            MovieId = 6,
                            RatingStars = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 17,
                            MovieId = 4,
                            RatingStars = 5,
                            UserId = 7
                        });
                });

            modelBuilder.Entity("FreeWheelMovieAPI.Models.MovieGenre", b =>
                {
                    b.HasOne("FreeWheelMovieAPI.Models.Genre", "Genre")
                        .WithMany("MovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FreeWheelMovieAPI.Models.Movie", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FreeWheelMovieAPI.Models.UserMovieRating", b =>
                {
                    b.HasOne("FreeWheelMovieAPI.Models.Movie", "Movie")
                        .WithMany("UserMovieRatings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FreeWheelMovieAPI.Models.User", "User")
                        .WithMany("UserMovieRatings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
